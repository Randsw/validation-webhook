---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhook-demo-sa
  namespace: webhook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: namespace-reader
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webhook-demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-reader
subjects:
  - kind: ServiceAccount
    name: webhook-demo-sa
    namespace: webhook-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-server
  namespace: webhook
  labels:
    app: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-server
  template:
    metadata:
      labels:
        app: webhook-server
    spec:
      containers:
        - name: webhook-server
          image: ghcr.io/randsw/validate-webhook
          imagePullPolicy: Always # this forces k8s to use local image that we loaded via kind
          ports:
            - containerPort: 3000
              name: webhook-api
          volumeMounts:
          - mountPath: "/etc/opt"
            name: webhook-certs
            readOnly: true
      serviceAccount: webhook-demo-sa
      volumes:
        - name: webhook-certs
          secret:
            secretName: webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-server
  namespace: webhook
spec:
  selector:
    app: webhook-server
  ports:
    - port: 443
      targetPort: webhook-api